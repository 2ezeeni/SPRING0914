-- SELECT 검색할 칼럼
-- FROM 테이블
-- [WHERE 조건식]
-- [GROUP BY 그룹할 칼럼][HAVING 조건식]
-- [ORDER BY 정렬 ASC|DESC]

-- 1. 카테젼 곱
-- 1) 두 테이블의 모든 조합이 나타나는 조인
-- 2) 조인조건을 잘못 세운 경우에 주로 발생
SELECT *
FROM EMPLOYEE, DEPARTMENT;

SELECT *
FROM EMPLOYEE CROSS JOIN DEPARTMENT;


-- 2. 내부조인
-- 1) 두 테이블에 모두 존재하는 데이터만 조인
-- 2) 형식
--   (1) SELECT 칼럼 FROM 테이블1, 테이블2 WHERE 테이블1.칼럼 = 테이블2.칼럼
--   (2) SELECT 칼럼 FROM 테이블1 INNER JOIN 테이블2 ON 테이블1.칼럼 = 테이블2.칼럼

-- 2-1. 모든 사원들의 NAME과 DEPT_NAME을 조회하시오.
SELECT EMPLOYEE.NAME, DEPARTMENT.DEPT_NAME
FROM EMPLOYEE, DEPARTMENT
WHERE EMPLOYEE.DEPARTMENT = DEPARTMENT.DEPT_NO;

SELECT E.NAME, D.DEPT_NAME
FROM EMPLOYEE E, DEPARTMENT D
WHERE E.DEPARTMENT = D.DEPT_NO;

SELECT E.NAME, D.DEPT_NAME
FROM EMPLOYEE E INNER JOIN DEPARTMENT D
ON E.DEPARTMENT = D.DEPT_NO;

-- 2-2. '서울'에서 근무하는 직원들의 사원번호와 이름을 조회하시오.
SELECT E.EMP_NO, E.NAME
FROM EMPLOYEE E, DEPARTMENT D
WHERE E.DEPARTMENT = D.DEPT_NO
AND D.LOCATION = '서울';

SELECT E.EMP_NO, E.NAME
FROM EMPLOYEE E INNER JOIN DEPARTMENT D
ON E.DEPARTMENT = D.DEPT_NO  -- 조인 조건식
WHERE D.LOCATION = '서울';   -- 일반 조건식


CREATE VIEW 과장들 AS
SELECT * FROM EMPLOYEE WHERE POSITION = '과장';

SELECT * FROM 과장들;

DROP VIEW 과장들;

-- 신규사원을 입력할 수 있도록
-- 기존 EMPLOYEE 의 명단을 빼고, 구조는 동일한 테이블을 만듬

CREATE TABLE 신규사원 AS
SELECT * FROM EMPLOYEE WHERE 1 = 2;

SELECT * FROM 신규사원;

DROP TABLE 신규사원;








